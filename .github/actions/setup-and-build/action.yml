name: "Setup and Build"
description: "Install dependencies, configure and build target"

inputs:
  target:
    description: "Which target to build"
    required: true
  config:
    description: "Build configuration (debug or release)"
    required: false
    default: "debug"
  options:
    description: "Additional luthier options"
    required: false
    default: ""
  use-python-luthier:
    description: "Builds with the python version of luthier"
    type: boolean
    required: false
    default: false
  token:
    description: "Token for foreman"
    required: true

outputs:
  exe_path:
    description: "Path to the compiled executable"
    value: ${{ steps.artifact_path.outputs.exe_path }}

runs:
  using: "composite"
  steps:
    - name: Set runtime variables
      id: run
      shell: bash
      run: |
        if [ "${{ inputs.use-python-luthier }}" = "true" ]; then
          echo "runtime=python" >> "$GITHUB_OUTPUT"
          echo "ext=py" >> "$GITHUB_OUTPUT"
        else
          echo "runtime=lute" >> "$GITHUB_OUTPUT"
          echo "ext=luau" >> "$GITHUB_OUTPUT"
        fi

    - name: Set up Python
      if: inputs.use-python-luthier
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"

    - name: Install tools
      uses: Roblox/setup-foreman@v3
      with:
        token: ${{ inputs.token }}
        allow-external-github-orgs: true

    - name: Install dependencies (Linux)
      if: runner.os == 'Linux'
      shell: bash
      run: |
        sudo apt-get update
        sudo apt-get install -y ninja-build clang

    - name: Install dependencies (macOS)
      if: runner.os == 'macOS'
      shell: bash
      run: |
        brew update
        brew unlink brotli zstd

    - name: Set up MSVC
      if: runner.os == 'Windows'
      uses: luau-lang/msvc-dev-cmd@v1

    - name: Set up NASM
      if: runner.os == 'Windows'
      uses: luau-lang/setup-nasm@v1

    - name: Cache extern folder
      uses: actions/cache@v4
      id: cache-extern
      with:
        path: extern
        key: extern-${{ hashFiles('extern/*.tune') }}

    - name: Fetch ${{ inputs.target }}
      if: steps.cache-extern.outputs.cache-hit != 'true'
      shell: bash
      run: ${{ steps.run.outputs.runtime }} ./tools/luthier.${{ steps.run.outputs.ext }} fetch ${{ inputs.target }}

    - name: Configure ${{ inputs.target }}
      shell: bash
      run: ${{ steps.run.outputs.runtime }} ./tools/luthier.${{ steps.run.outputs.ext }} configure ${{ inputs.target }} --config ${{ inputs.config }} ${{ inputs.options }}

    - name: Build ${{ inputs.target }}
      shell: bash
      run: ${{ steps.run.outputs.runtime }} ./tools/luthier.${{ steps.run.outputs.ext }} build ${{ inputs.target }} --config ${{ inputs.config }} ${{ inputs.options }}

    - name: Get Artifact Path
      id: artifact_path
      shell: bash
      run: |
        exe_path=$(${{ steps.run.outputs.runtime }} ./tools/luthier.${{ steps.run.outputs.ext }} build ${{ inputs.target }} --config ${{ inputs.config }} --which)
        echo "Executable path: $exe_path"  # Debug print
        echo "exe_path=$exe_path" >> "$GITHUB_OUTPUT"
